(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[146],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return y}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(r),y=o,d=f["".concat(l,".").concat(y)]||f[y]||u[y]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6221:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i={},c={unversionedId:"api-reference/types",id:"api-reference/types",isDocsHomePage:!1,title:"Types",description:"The library exports the following types:",source:"@site/docs/api-reference/types.md",sourceDirName:"api-reference",slug:"/api-reference/types",permalink:"/cypress-selectors/api-reference/types",editUrl:"https://github.com/anton-kravchenko/cypress-selectors/edit/main/docs/docs/api-reference/types.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Selectors",permalink:"/cypress-selectors/api-reference/selectors"},next:{title:"Selector Configuration",permalink:"/cypress-selectors/api-reference/selector-configuration"}},l=[{value:"<code>Selector</code>",id:"selector",children:[]},{value:"<code>Chainable</code>",id:"chainable",children:[]}],s={toc:l};function p(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The library exports the following types:"),(0,a.kt)("h3",{id:"selector"},(0,a.kt)("inlineCode",{parentName:"h3"},"Selector")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class Selectors {\n  @ById('root') static root: Selector;\n}\n")),(0,a.kt)("p",null,"This is a utility type that you should use for typing selectors. It extends ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.Chainable")," (so it can be used as any other chainer) and adds some internal information to make it possible to specify ",(0,a.kt)("em",{parentName:"p"},"child-parent")," relationship by ",(0,a.kt)("inlineCode",{parentName:"p"},"reference")," like the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class Selectors {\n  @ById('root') static parent: Selector;\n  @ById('child', { parent: Selectors.parent }) static children: Chainable;\n}\n")),(0,a.kt)("h3",{id:"chainable"},(0,a.kt)("inlineCode",{parentName:"h3"},"Chainable")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class Selectors {\n  @ById('element') static element: Chainable;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Chainable")," is just an alias of ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.Chainable")," type. You can use it to get nice auto-completion in your IDE when working with selectors."))}p.isMDXComponent=!0}}]);