(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[372],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8762:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o={},l={unversionedId:"caveats",id:"caveats",isDocsHomePage:!1,title:"Caveats",description:"Decorators",source:"@site/docs/caveats.md",sourceDirName:".",slug:"/caveats",permalink:"/cypress-selectors/caveats",editUrl:"https://github.com/anton-kravchenko/cypress-selectors/edit/main/docs/docs/caveats.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Recipes",permalink:"/cypress-selectors/recipes"}},s=[{value:"Decorators",id:"decorators",children:[]},{value:"<em>children-parent</em> linking via <code>alias</code>",id:"children-parent-linking-via-alias",children:[]},{value:"<em>children-parent</em> linking via reference",id:"children-parent-linking-via-reference",children:[]},{value:"Setup",id:"setup",children:[]},{value:"Static class members",id:"static-class-members",children:[]},{value:"<code>ignoreCase</code>",id:"ignorecase",children:[]},{value:"XPath based text selectors",id:"xpath-based-text-selectors",children:[]}],p={toc:s};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"decorators"},"Decorators"),(0,i.kt)("p",null,"The library is built around ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/decorators.html"},"decorators")," which are still a ",(0,i.kt)("a",{parentName:"p",href:"https://tc39.es/proposal-decorators/"},"stage-2 proposal"),"."),(0,i.kt)("h3",{id:"children-parent-linking-via-alias"},(0,i.kt)("em",{parentName:"h3"},"children-parent")," linking via ",(0,i.kt)("inlineCode",{parentName:"h3"},"alias")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"children-parent")," linking via ",(0,i.kt)("inlineCode",{parentName:"p"},"alias")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"parentAlias")," works ",(0,i.kt)("strong",{parentName:"p"},"only")," within a single class - if you need to link selectors from different classes, use ",(0,i.kt)("inlineCode",{parentName:"p"},"children-parent")," linking via reference as shown ",(0,i.kt)("a",{parentName:"p",href:"/cypress-selectors/caveats#children-parent-linking-via-reference"},"below"),"."),(0,i.kt)("h3",{id:"children-parent-linking-via-reference"},(0,i.kt)("em",{parentName:"h3"},"children-parent")," linking via reference"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"children-parent")," linking via reference uses ",(0,i.kt)("a",{parentName:"p",href:"https://tc39.es/proposal-static-class-features/"},"static class fields stage-3 proposal"),". For some reason, ",(0,i.kt)("inlineCode",{parentName:"p"},"babel-loader")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-loader")," transpile code that defines static class fields differently."),(0,i.kt)("p",null,"For example, if you transpile the following code with ",(0,i.kt)("inlineCode",{parentName:"p"},"babel-loader")," using ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/preset-typescript")," preset and ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/plugin-proposal-decorators"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/plugin-proposal-class-properties")," plugins:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"class Selectors {\n  @ById('main') static parent: Selector;\n  @ByClass('button', { parent: Selectors.parent }) static children: Selector;\n}\n")),(0,i.kt)("p",null,"You will get the ",(0,i.kt)("inlineCode",{parentName:"p"},"Cannot access 'Bar' before initialization")," error, ",(0,i.kt)("strong",{parentName:"p"},"while being transpiled via ",(0,i.kt)("inlineCode",{parentName:"strong"},"ts-loader")," it works as expected"),"."),(0,i.kt)("p",null,"However, extracting the ",(0,i.kt)("inlineCode",{parentName:"p"},"parent")," selector could fix this example as following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"class ParentSelectors {\n  @ById('main') static parent: Selector;\n}\n\nclass ChildrenSelectors {\n  @ByClass('button', { parent: ParentSelectors.parent }) static children: Selector;\n}\n")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"child-parent")," linking is defined this way, it will work with both ",(0,i.kt)("inlineCode",{parentName:"p"},"babel-loader")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-loader"),"."),(0,i.kt)("h3",{id:"setup"},"Setup"),(0,i.kt)("p",null,"The documentation doesn't detail how to set up Cypress and transpiling via ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-loader"),". However, the setup of this project could be used as a good reference. The whole setup is done in 2 files: ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack.config.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". If you need another reference on setting up a project like this - check out ",(0,i.kt)("a",{parentName:"p",href:"https://glebbahmutov.com/blog/use-typescript-with-cypress/"},"this")," article."),(0,i.kt)("h3",{id:"static-class-members"},"Static class members"),(0,i.kt)("p",null,"All of the examples are declaring selectors as ",(0,i.kt)("inlineCode",{parentName:"p"},"static")," class fields. This is not a requirement - the same functionality could be achieved with non ",(0,i.kt)("inlineCode",{parentName:"p"},"static")," class fields. However, please note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"child-parent")," relationship is not going to work without ",(0,i.kt)("inlineCode",{parentName:"p"},"parent")," being declared a ",(0,i.kt)("inlineCode",{parentName:"p"},"static")," class field."),(0,i.kt)("h3",{id:"ignorecase"},(0,i.kt)("inlineCode",{parentName:"h3"},"ignoreCase")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ignoreCase")," configuration works only for text in English. It uses the following ",(0,i.kt)("inlineCode",{parentName:"p"},"XPath")," function to transform text into lowercase and compare it with the specified text (which also gets transformed into lower case):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"translate(text(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz');\n")),(0,i.kt)("h3",{id:"xpath-based-text-selectors"},"XPath based text selectors"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"XPath")," based text selectors (",(0,i.kt)("inlineCode",{parentName:"p"},"@ByExactText"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@ByPartialText"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@ByPartialLinkText")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"@ByExactLinkText"),") are using ",(0,i.kt)("inlineCode",{parentName:"p"},"concat")," function to escape quotes in ",(0,i.kt)("inlineCode",{parentName:"p"},"XPath")," selectors. Due to that, generated XPath selector might look like the following (given that your text is ",(0,i.kt)("inlineCode",{parentName:"p"},"double\"single'quote"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"//*[text()=concat('double', '\"', ' single', \"'\", 'quote')]\n")))}c.isMDXComponent=!0}}]);